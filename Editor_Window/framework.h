// header.h: 표준 시스템 포함 파일
// 또는 프로젝트 특정 포함 파일이 들어 있는 포함 파일입니다.
//

#pragma once

#include "targetver.h"
#define WIN32_LEAN_AND_MEAN             // 거의 사용되지 않는 내용을 Windows 헤더에서 제외합니다.
// Windows 헤더 파일
#include <windows.h>
// C 런타임 헤더 파일입니다.
#include <stdlib.h>
#include <malloc.h>
#include <memory.h>
#include <tchar.h>

// 정적 라이브러리 : 프로그램이 빌드될 때 라이브러리 전부 올림 
// 장점 : 시스템 환경이 변해도 영향이 없음
// 컴파일 시 필요한 라이브러리를 적재하기 때문에 이식성이 좋음.
// 런타임시 외부를 참조할 필요가 없기 때문에 속도가 빠르다.
// 단점 : 같은 코드를 가진 프로그램이 실행되면 코드 중복 -> 메모리 낭비
// 라이브러리가 변경되면 변경된 라이브러리 재배포가 아니라 다시 컴파일해서 재배포해야함

// 동적 라이브러리 : 필요할 때 가져다씀 메모리절약, 관리하기 어려움
// 보다 쉽게 업그레이드 해서 배포가능
// 다른프로그램에서 동일한 함수 호출가능
// 라이브러리만 재배포하면되므로 유지보수 쉬움
// 단점 : 외부의존도 높아 이식성이 낮음
// 공유라이브러리를 메모리에 올려놓고 해당 라이브러리를 찾아서 접근 -> 속도 저하
